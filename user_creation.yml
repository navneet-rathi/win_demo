---
- name: Create a user on Windows
  hosts: all
  gather_facts: true
  tasks:
    - name: Check if server are reachable or not
      ansible.windows.win_ping:
      register: ping_result
      
    - debug:
        msg: "{{ ping_result }}"   
  
    - name: Generate Complex randome password
      set_fact:
        generated_password: "{{ lookup('community.general.random_string', length=12, min_lower=1, min_upper=1, min_numeric=1, min_special=1, override_special='-_=+!#$()[]') }}"
      no_log: true

    - name: Create a new user
      ansible.windows.win_user:
        name: "{{ new_user }}"
        password: "{{ generated_password }}"
        description: "This is a new user"
        groups:
          - Users
          - Remote Desktop Users
        state: present
      when:
        - create|default(true)|bool == true  
        - is_administrator|default(false)|bool == false

    - name: Create a new administrator user
      ansible.windows.win_user:
        name: "{{ new_user }}"
        password: "{{ generated_password }}"
        description: "Administrator user account"
        groups:
          - Administrators
          - Remote Desktop Users
        state: present
      when:
        - create|default(true)|bool == true
        - is_administrator|default(false)|bool == true

    - name: Ensure user  is removed from system
      ansible.windows.win_user:
        name: "{{ new_user }}"
        state: absent
      when:
        - create|default(true)|bool == false

    - name: Create a directory if it does not exist for pass
      ansible.builtin.file:
        path: /tmp/pass
        state: directory
        mode: '0755'
      delegate_to: localhost

    - name: Genrate a CSV file
      ansible.builtin.shell: echo "{{inventory_hostname}},{{new_user}},{{ generated_password }}" >> "/tmp/pass/{{inventory_hostname}}"
      delegate_to: localhost

- name: Genrate Template and send email
  hosts: localhost
  gather_facts: true
  tasks:
    - name: Assemble from fragments from a directory
      ansible.builtin.assemble:
        src: /tmp/pass
        dest: /tmp/pass.txt
      delegate_to: localhost

    - name: Read users from CSV file and return a list
      community.general.read_csv:
        path: /tmp/pass.txt
        fieldnames: host,username,generated_password
        delimiter: ','
      register: passdata
      delegate_to: localhost

    - name: Genrate Email content to Send in Email
      ansible.builtin.template:
        src: alert_email_html.j2
        dest: /tmp/alert_email.html
      run_once: true  
      delegate_to: 127.0.0.1
      when:
         - create|default(true)|bool == true     

    - name: Send email Alert
      mail:
        host: smtp.gmail.com
        port: 587
        subtype: html
        to:
        - "nrathi@redhat.com"
        subject: "Alert: user created and Password Changed as per the org policy"
        body: "{{ lookup('file', '/tmp/alert_email.html') }}"
        username: "{{ lookup('hashi_vault', 'secret=secret/data/dev/email:user') }}"
        password: "{{ lookup('hashi_vault', 'secret=secret/data/dev/email:pass') }}"
      run_once: true  
      delegate_to: 127.0.0.1
      changed_when: True
      when:
         - create|default(true)|bool == true
